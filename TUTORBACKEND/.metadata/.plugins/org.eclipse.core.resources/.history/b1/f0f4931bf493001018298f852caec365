package com.tutorfinder.service;

import com.tutorfinder.dto.TutorProfileDTO;
import com.tutorfinder.model.TutorProfile;
import com.tutorfinder.model.User;
import com.tutorfinder.repository.TutorProfileRepository;
import com.tutorfinder.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.stream.Collectors;

@Service
public class TutorProfileService {

    @Autowired
    private TutorProfileRepository tutorProfileRepository;

    @Autowired
    private UserRepository userRepository;

    // ✅ Save or update profile
    public TutorProfile saveOrUpdateProfile(Long userId, TutorProfile profileData) {
        User user = userRepository.findById(userId)
                .orElseThrow(() -> new RuntimeException("User not found"));

        TutorProfile profile = tutorProfileRepository.findByUserId(userId)
                .orElse(new TutorProfile());

        profile.setUserId(userId);
        profile.setName(user.getName());
        profile.setEmail(user.getEmail());

        profile.setSubjects(profileData.getSubjects());
        profile.setExperience(profileData.getExperience());
        profile.setBio(profileData.getBio());
        profile.setHourlyRate(profileData.getHourlyRate());
        profile.setLocation(profileData.getLocation());
        profile.setAvailability(profileData.getAvailability());

        return tutorProfileRepository.save(profile);
    }

    // ✅ Get profile DTO
    public TutorProfileDTO getProfile(Long userId) {
        TutorProfile profile = tutorProfileRepository.findByUserId(userId)
                .orElseThrow(() -> new RuntimeException("Profile not found"));
        return new TutorProfileDTO(
                profile.getId(),
                profile.getName(),
                profile.getEmail(),
                profile.getSubjects(),
                profile.getExperience(),
                profile.getBio(),
                profile.getHourlyRate(),
                profile.getLocation(),
                profile.getAvailability()
        );
    }

    // ✅ Get all tutors
    public List<TutorProfileDTO> getAllTutors() {
        return tutorProfileRepository.findAll().stream().map(profile -> 
            new TutorProfileDTO(
                profile.getId(),
                profile.getName(),
                profile.getEmail(),
                profile.getSubjects(),
                profile.getExperience(),
                profile.getBio(),
                profile.getHourlyRate(),
                profile.getLocation(),
                profile.getAvailability()
            )
        ).collect(Collectors.toList());
    }
}