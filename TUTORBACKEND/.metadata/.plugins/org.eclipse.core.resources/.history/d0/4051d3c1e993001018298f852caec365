// Create profile
public TutorProfile createProfile(Long userId, TutorProfile profile) {
    User user = userRepository.findById(userId)
            .orElseThrow(() -> new RuntimeException("User not found"));

    Optional<TutorProfile> existingProfile = tutorProfileRepository.findByUserId(userId);
    if (existingProfile.isPresent()) {
        throw new RuntimeException("Profile already exists for this user");
    }

    // ✅ copy name & email into tutor_profiles
    profile.setUserId(userId);
    profile.setName(user.getName());
    profile.setEmail(user.getEmail());

    return tutorProfileRepository.save(profile);
}

// Update profile
public TutorProfile updateProfile(Long userId, TutorProfile updatedProfile) {
    TutorProfile existingProfile = tutorProfileRepository.findByUserId(userId)
            .orElseThrow(() -> new RuntimeException("Profile not found"));

    User user = userRepository.findById(userId)
            .orElseThrow(() -> new RuntimeException("User not found"));

    existingProfile.setSubjects(updatedProfile.getSubjects());
    existingProfile.setExperience(updatedProfile.getExperience());
    existingProfile.setBio(updatedProfile.getBio());
    existingProfile.setHourlyRate(updatedProfile.getHourlyRate());
    existingProfile.setLocation(updatedProfile.getLocation());
    existingProfile.setAvailability(updatedProfile.getAvailability());

    // ✅ keep name/email in sync
    existingProfile.setName(user.getName());
    existingProfile.setEmail(user.getEmail());

    return tutorProfileRepository.save(existingProfile);
}
