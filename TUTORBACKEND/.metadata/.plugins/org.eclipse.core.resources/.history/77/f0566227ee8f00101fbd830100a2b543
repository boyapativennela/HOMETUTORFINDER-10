package com.tutorfinder.controller;

import com.tutorfinder.model.TutorProfile;
import com.tutorfinder.service.TutorProfileService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
@RequestMapping("/api/tutors/profile")
@CrossOrigin(origins = "http://localhost:5173")
public class TutorProfileController {

    @Autowired
    private TutorProfileService tutorProfileService;

    @PostMapping("/{userId}")
    public ResponseEntity<?> createProfile(@PathVariable Long userId,
                                           @RequestBody TutorProfile profile) {
        try {
            TutorProfile createdProfile = tutorProfileService.createProfile(userId, profile);
            return ResponseEntity.status(HttpStatus.CREATED).body(createdProfile);
        } catch (RuntimeException e) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(e.getMessage());
        }
    }

    @PutMapping("/{userId}")
    public ResponseEntity<?> updateProfile(@PathVariable Long userId,
                                           @RequestBody TutorProfile profile) {
        try {
            TutorProfile updatedProfile = tutorProfileService.updateProfile(userId, profile);
            return ResponseEntity.ok(updatedProfile);
        } catch (RuntimeException e) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage());
        }
    }

    @GetMapping("/{userId}")
    public ResponseEntity<?> getProfile(@PathVariable Long userId) {
        Optional<TutorProfile> profile = tutorProfileService.getProfile(userId);
        return profile.<ResponseEntity<?>>map(ResponseEntity::ok)
                .orElseGet(() -> ResponseEntity.status(HttpStatus.NOT_FOUND).body("Profile not found"));
    }
}