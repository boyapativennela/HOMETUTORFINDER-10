@Service
public class BookingService {

    @Autowired
    private BookingRepository bookingRepository;

    // Student books a tutor
    public Booking bookSession(Booking booking) {
        booking.setStatus("pending"); // default status
        return bookingRepository.save(booking);
    }

    // Tutor sees bookings (based on tutor_profiles.id ✅)
    public List<Booking> getTutorBookings(Long tutorId) {
        return bookingRepository.findByTutorId(tutorId);
    }

    // Student sees bookings (based on users.id ✅)
    public List<Booking> getStudentBookings(Long studentId) {
        return bookingRepository.findByStudentId(studentId);
    }

    // Accept/Decline booking
    public Booking updateBookingStatus(Long bookingId, String status) {
        Booking booking = bookingRepository.findById(bookingId)
                .orElseThrow(() -> new RuntimeException("Booking not found"));
        booking.setStatus(status);
        return bookingRepository.save(booking);
    }
}
